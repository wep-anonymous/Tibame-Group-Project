//---------------------------------
// Key Btn
//---------------------------------
.btnKey-L {
  $size: 20px;
  &.dark {
    @include keybtn($baseBlue, false, true);
    @include Aleo-AG($size, $subWhite);
    transition: all 0.3s ease;
    &:hover {
      background-color: $subBlue;
      @include cols-transition();
    }
    // border
    &-border {
      @include keybtn($baseBlue, true, false);
      @include Aleo-AG($size, $baseBlue);
      transition: all 0.3s ease;
      &:hover {
        box-shadow: 0px 0px 20px 0px rgba($baseBlue, 0.6);
        @include cols-transition();
      }
    }
  }

  &.light {
    @include keybtn($baseOrange, false, true);
    @include Aleo-AG($size, $subWhite);
    transition: all 0.3s ease;
    &:hover {
      background-color: $subOrange;
      @include cols-transition();
    }
    // border
    &-border {
      @include keybtn($baseOrange, true, false);
      @include Aleo-AG($size, $baseOrange);
      transition: all 0.3s ease;
      &:hover {
        box-shadow: 0px 0px 20px 0px rgba($baseOrange, 0.6);
        @include cols-transition();
      }
    }
  }

  &.none {
    @include keybtn($subDark-gray, false);
    @include Aleo-AG($size, $subGray);
  }
}

.btnKey-M {
  $size: 16px;
  &.dark {
    @include keybtn($baseBlue, false, true);
    @include Aleo-AG($size, $subWhite);
    transition: all 0.3s ease;
    &:hover {
      background-color: $subBlue;
      @include cols-transition();
    }
    // border
    &-border {
      @include keybtn($baseBlue, ture, false);
      @include Aleo-AG($size, $baseBlue);
      transition: all 0.3s ease;
      &:hover {
        box-shadow: 0px 0px 20px 0px rgba($baseBlue, 0.6);
        @include cols-transition();
      }
    }
  }

  &.light {
    @include keybtn($baseOrange, false, true);
    @include Aleo-AG($size, $subWhite);
    transition: all 0.3s ease;
    &:hover {
      background-color: $subOrange;
      @include cols-transition();
    }
    // border
    &-border {
      @include keybtn($baseOrange, true, false);
      @include Aleo-AG($size, $baseOrange);
      transition: all 0.3s ease;
      &:hover {
        box-shadow: 0px 0px 20px 0px rgba($baseOrange, 0.6);
        @include cols-transition();
      }
    }
  }

  &.none {
    @include keybtn($subDark-gray, false);
    @include Aleo-AG($size, $subGray);
  }
}

//---------------------------------
// Link Btn
//---------------------------------
.btnLink {
  $size: 16px;
  &.dark {
    @include normalBtn($baseBlue);
    @include FanwoodText-Ag($size, $baseBlue);
  }
  &.light {
    @include normalBtn($baseOrange);
    @include FanwoodText-Ag($size, $baseOrange);
  }
  &.white {
    @include normalBtn($subWhite);
    @include FanwoodText-Ag($size, $subWhite);
  }
  &.whiteForFrontPage {
    @include normalBtn($subWhite);
  }
}

//---------------------------------
// tab Btn
//---------------------------------
@mixin btnTab($basecolor, $subcolor, $fontsize) {
  display: flex;
  width: 100%;
  border-bottom: $basecolor solid;
  .text {
    padding: 5px 10px;
    width: 100%;
    @include FanwoodText-AG($fontsize, $basecolor);
  }
  .tab-cross {
    position: relative;
    width: 40px;
    border-left: $basecolor solid;
    .cols {
      @include cols(2px, $basecolor);
    }
    .rows {
      @include rows(2px, $basecolor);
    }
  }
  /* hover */
  &:hover {
    .tab-cross {
      position: relative;
      height: auto;
      width: 40px;
      background-color: $basecolor;
      .cols {
        @include cols(2px, $subcolor);
        transform: translateX(calc(4%));
        span:nth-child(2) {
          display: none;
        }
      }
      .rows {
        @include rows(2px, $subcolor);
      }
    }
  }
}
// ProjectMenu , Accordion:創作頁手風琴 (一般 tab Btn)
.btnTab {
  @include btnTab($baseBlue, $subWhite, 20px);
  &.active {
    @include btnTab($baseBlue, $subWhite, 18px);
    .text {
      background-color: $baseBlue;
      color: $subWhite;
    }
  }
}
.btnTab-list {
  @include btnTab($baseBlue, $subWhite, 18px);
}
// AccordionContent:創作頁手風琴展開後
.accordionContent {
  border-bottom: $baseBlue solid;
  padding: 10px;
}

//---------------------------------
// open-close-btn (component:OpenCloseButton 包含漢堡和十字架樣式)
//
// 引用元件在type打要的樣式即可,沒有開關功能要自己寫 <OpenCloseButton type="plus/hamburger" color="dark/light"/>
//---------------------------------

.open-close-btn {
  /* 共用外框設定 */
  position: relative;
  width: 60px;
  height: 40px;
  border-radius: 50px;
  &.dark {
    border: $baseBlue solid;
  }
  &.light {
    border: $subWhite solid;
  }

  // 內部線條設定
  .dark {
    background-color: $baseBlue;
  }
  .light {
    background-color: $subWhite;
  }

  /* plus:十字架樣式的動畫和設定*/
  .cols {
    position: absolute;
    height: 30px;
    width: 2px;
    top: 3px;
    animation: plusStart 0.5s ease-in forwards;
    /* 根據 theme 設定顏色 */
  }
  .rows {
    position: absolute;
    left: 8px;
    top: 18px;
    width: 40px;
    height: 2px;
  }
  @keyframes plusStart {
    0% {
      left: 26px; /* 初始位置重疊在中間 */
    }
    100% {
      left: var(--final-left); /* 最終位置 */
    }
  }
  .right {
    --final-left: 18px;
  }
  .left {
    --final-left: 36px;
  }

  /* hamburger:漢堡樣式的動畫和設定 */
  .line {
    position: absolute;
    left: 8px;
    width: 40px;
    height: 2px;
    animation: hamburgerStart 0.6s ease-in forwards;
  }
  @keyframes hamburgerStart {
    0% {
      top: 18px; /* 初始位置重疊在中間 */
    }
    100% {
      top: var(--final-top); /* 最終位置 */
    }
  }
  .top {
    --final-top: 10px;
  }
  .mid {
    --final-top: 18px;
  }
  .btm {
    --final-top: 26px;
  }
  // hover 效果
  &:hover {
    /* plus */
    .right {
      transform: translateX(9px);
      transition: 0.3s ease-in;
    }
    .left {
      transform: translateX(-9px);
      transition: 0.3s ease-in;
    }
    /* hamburger */
    .top {
      transform: translateY(8px);
      transition: 0.3s ease-in;
    }
    .btm {
      transform: translateY(-8px);
      transition: 0.3s ease-in;
    }
  }
}
